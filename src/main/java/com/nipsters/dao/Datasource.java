package com.nipsters.dao;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import com.nipsters.exceptions.FailureConnectionException;

public class Datasource {
    
    private String url;
    private String username;
    private String password;

    /*
        Conex√£o do banco de dados
    */
    private Connection connection;

    /*
        Singleton
    */
    private static Datasource instance;

    private Datasource(String url, String username, String password) throws FailureConnectionException{
        this.url = url;
        this.username = username;
        this.password = password;
        try{
            this.connection = DriverManager.getConnection(this.url, this.username, this.password);
        }catch(SQLException sqle){
            throw new FailureConnectionException();
        }
    }

    public static Connection getConnection(String url, String username, String password) throws FailureConnectionException{
        if(instance == null)
            instance = new Datasource(url, username, password);
        return instance.connection;
    }

    public static Connection getConnection(String url) throws FailureConnectionException{
        return getConnection(url, "root", "");
    }

    public static Connection getConnection() throws FailureConnectionException{
        return getConnection("jdbc:hsqldb:file:./data/maso");
    }

    public void initialize() throws SQLException{
        Statement statement = connection.createStatement();
        statement.executeUpdate("CREATE TEXT TABLE IF NOT EXISTS collaborators( "
        +"id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1), "
        +"name VARCHAR(50) NOT NULL UNIQUE, "
        +"genre BIT NOT NULL, "
        +"birth DATE NOT NULL, "
        +"function VARCHAR(30) NOT NULL, "
        +"sector VARCHAR(30) NOT NULL, "
        +"PRIMARY KEY (id, name));");
        statement.executeUpdate("CREATE TEXT TABLE IF NOT EXISTS asos("
        +"number INT UNIQUE NOT NULL, "
        +"id_collaborator INT NOT NULL, "
        +"dated_to DATE NOT NULL, "
        +"type TINYINT NOT NULL, "
        +"PRIMARY KEY (number));");
    }
	
}