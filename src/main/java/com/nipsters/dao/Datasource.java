package com.nipsters.dao;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import com.nipsters.exceptions.FailureConnectionException;

public class Datasource {
    
    /*
        SQLs para inicialização
    */
    private static final String SQL_TABLE_COLLABORATORS = "CREATE TEXT TABLE IF NOT EXISTS collaborators ( "
    +"id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1), "
    +"name VARCHAR(50) NOT NULL, "
    +"genre TINYINT NOT NULL, "
    +"birth DATE NOT NULL, "
    +"function VARCHAR(30) NOT NULL, "
    +"sector VARCHAR(30) NOT NULL, "
    +"PRIMARY KEY (id, name));";
    private static final String SQL_TABLE_ASO = "CREATE TEXT TABLE IF NOT EXISTS asos ( "
    +"number INT NOT NULL, "
    +"id_collaborator INT NOT NULL, "
    +"dated_to DATE NOT NULL, "
    +"type TINYINT NOT NULL, "
    +"PRIMARY KEY (number));";
    /*
        Atributos
    */
    private String url;
    private String username;
    private String password;

    /*
        Conexão do banco de dados
    */
    private Connection connection;

    /*
        Singleton
    */
    private static Datasource instance;

    private Datasource(String url, String username, String password){
        this.url = url;
        this.username = username;
        this.password = password;
        try{
            this.connection = DriverManager.getConnection(this.url, this.username, this.password);
        }catch(SQLException sqle){
            System.out.println(String.format("[ERROR: %d] - %s", sqle.getErrorCode(), sqle.getMessage()));
            sqle.printStackTrace();
        }
        initialize();
    }

    public static Connection getConnection(String url, String username, String password){
        if(instance == null)
            instance = new Datasource(url, username, password);
        return instance.connection;
    }

    public static Connection getConnection(String url){
        return getConnection(url, "root", "");
    }

    public static Connection getConnection(){
        return getConnection("jdbc:hsqldb:file:./data/maso");
    }

    private void initialize(){
        Statement statement = null;
        try{
            statement = connection.createStatement();
            statement.executeUpdate(SQL_TABLE_COLLABORATORS);
            statement.executeUpdate(SQL_TABLE_ASO);
            statement.executeUpdate("SET TABLE asos SOURCE \"asos;fs=|;quoted=false\";");
            statement.executeUpdate("SET TABLE collaborators SOURCE \"collaborators;quoted=false\";");
        }catch(SQLException sqle){
            System.out.println(String.format("[ERROR: %d] - %s", sqle.getErrorCode(), sqle.getMessage()));
            sqle.printStackTrace();
        }
        
        
    }
	
}